#include "WiFi.h"
#include "WiFiClientSecure.h"
#include "UniversalTelegramBot.h"
#include "ArduinoJson.h"
#include "DHT.h"
#include <IRremote.hpp>
#define IR_RECEIVE_PIN 23

#define LAMP_R_PORT 4
#define LAMP_G_PORT 2
#define LAMP_B_PORT 15

bool lampTurned = false;
byte lampR = 0, lampG = 0, lampB = 0;
/* –ö–æ–Ω—Ç–∞–∫—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω –¥–∞—Ç—á–∏–∫ */
#define DHTPIN 27
#define LIGHTLEVELPIN 32
#define WATERLEVELPIN 33
/* –¢–∏–ø –¥–∞—Ç—á–∏–∫–∞ */
#define DHTTYPE DHT11
/* –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç—á–∏–∫–æ–º */
DHT dht(DHTPIN, DHTTYPE);

// –î–∞–Ω–Ω—ã–µ Wi-Fi
const char* ssid = "cybergarden";
const char* password = "cybergarden";

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram
#define BOT_TOKEN "TOKEN_BOT"

WiFiClientSecure client;
UniversalTelegramBot bot(BOT_TOKEN, client);

// –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
unsigned long lastTimeBotRan = 0;
const int botRequestDelay = 1000;

// –§—É–Ω–∫—Ü–∏–∏-–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö


void setup() {
  Serial.begin(115200);
  dht.begin();
  IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK); // Start the receiver
  IrReceiver.enableIRIn();
  pinMode(LAMP_R_PORT, OUTPUT);
  pinMode(LAMP_G_PORT, OUTPUT);
  pinMode(LAMP_B_PORT, OUTPUT);

  if (!lampTurned) {
    analogWrite(LAMP_R_PORT, 0);
    analogWrite(LAMP_G_PORT, 0);
    analogWrite(LAMP_B_PORT, 0);
  }
  startWiFi();
}

void loop() {
  // delay(1000);
  // float t = dht.readTemperature();
  // Serial.print(F("%  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "));
  // Serial.print(t);
  // Serial.print(F("¬∞C "));
  // Serial.print("\n");
  // float h = dht.readHumidity();
  // Serial.print(F("–í–ª–∞–∂–Ω–æ—Å—Ç—å: "));
  // Serial.print(h);
  // Serial.print(F("%"));
  // Serial.print("\n");
  // int l = analogRead(LIGHTLEVELPIN);
  // Serial.print(F("–°–≤–µ—Ç: "));
  // Serial.println(l);
  // int w = analogRead(WATERLEVELPIN);
  // Serial.print(F("–£—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã: "));
  // Serial.println(w);


  if (millis() - lastTimeBotRan > botRequestDelay) {
    // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    
    if (numNewMessages) {
      Serial.println("–ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: " + String(numNewMessages));
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ –æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∑–∞ —Ü–∏–∫–ª –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      for (int i = 0; i < min(numNewMessages, 1); i++) { // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É 1 —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∑–∞ —Ü–∏–∫–ª
        String chat_id = String(bot.messages[i].chat_id);
        String text = bot.messages[i].text;
        String from_name = bot.messages[i].from_name;
        
        Serial.println("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: " + from_name);
        Serial.println("–¢–µ–∫—Å—Ç: " + text);
        
        // –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
        handleCommand(text, chat_id);
        
        // –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ò–ö
        break;
      }
    }
    lastTimeBotRan = millis();
  }

  //Serial.println("i'm alive!");

  if (IrReceiver.decode()) {
      Serial.println(IrReceiver.decodedIRData.command); // Print "old" raw data
      Serial.println(IrReceiver.decodedIRData.decodedRawData);
      IrReceiver.printIRResultShort(&Serial); // Print complete received data in one line
      //IrReceiver.printIRSendUsage(&Serial);   // Print the statement required to send this data
      
      if (IrReceiver.decodedIRData.address == 0x11) {
        lampR = IrReceiver.decodedIRData.command;
        if (lampTurned)
          analogWrite(LAMP_R_PORT, lampR);
      } else if (IrReceiver.decodedIRData.address == 0x22) {
        lampG = IrReceiver.decodedIRData.command;
        if (lampTurned)
          analogWrite(LAMP_G_PORT, lampG);
      } else if (IrReceiver.decodedIRData.address == 0x33) {
        lampB = IrReceiver.decodedIRData.command;
        if (lampTurned)
          analogWrite(15, lampB);
      } else if (IrReceiver.decodedIRData.address == 0x44) {
        if (IrReceiver.decodedIRData.command == 0) {
          lampTurned = false;
          analogWrite(LAMP_R_PORT, 0);
          analogWrite(LAMP_G_PORT, 0);
          analogWrite(LAMP_B_PORT, 0);
        } else {
          lampTurned = true;
          analogWrite(LAMP_R_PORT, lampR);
          analogWrite(LAMP_G_PORT, lampG);
          analogWrite(LAMP_B_PORT, lampB);
        }
      }

      IrReceiver.resume(); // Enable receiving of the next value
  }
}

float getTemperature() {
  float t = dht.readTemperature();
  Serial.print(F("%  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "));
  Serial.print(t);
  Serial.print(F("¬∞C "));
  Serial.print("\n");
  return t;
  //return 20.0 + (random(0, 200) / 10.0);
}

float getHumidity() {
  float h = dht.readHumidity();
  Serial.print(F("–í–ª–∞–∂–Ω–æ—Å—Ç—å: "));
  Serial.print(h);
  Serial.print(F("%"));
  Serial.print("\n");
  return h;
  //return 40.0 + (random(0, 600) / 10.0);
}

int getLightLevel() {
  //stopWiFi();
  int l = analogRead(LIGHTLEVELPIN);
  Serial.print(F("–°–≤–µ—Ç: "));
  Serial.println(l);
  //startWiFi();
  return l; //- data pin of sensor
}

int getWaterLevel() {
  //stopWiFi();
  int w = analogRead(WATERLEVELPIN);
  Serial.print(F("–£—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã: "));
  Serial.println(w);
  //startWiFi();
  return w; //- data pin of sensor
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
String createReplyKeyboard() {
  String keyboardJson = "[[\"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞\", \"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å\"], [\"üí° –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å\", \"–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å\"], [\"üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ\"]]";
  return keyboardJson;
}

// void sendWelcomeMessage(String chat_id, String from_name = "") {
//   if (from_name != "") {
//     welcome = "–ü—Ä–∏–≤–µ—Ç, " + from_name + "!\n" + welcome;
//   }
//   welcome += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:";
// }

void handleCommand(String text, String chat_id) {
  if (text == "/start" || text == "start") {
    //sendWelcomeMessage(chat_id);
    bot.sendMessageWithReplyKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:", "", createReplyKeyboard(), true);
  }
  else if (text == "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞") {
    float temperature = getTemperature();
    String message = "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(temperature) + "¬∞C";
    bot.sendMessage(chat_id, message, "");
  }
  else if (text == "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å") {
    float humidity = getHumidity();
    String message = "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(humidity) + "%";
    bot.sendMessage(chat_id, message, "");
  }
  else if (text == "üí° –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å") {
    int light = getLightLevel();
    String message = "üí° –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: " + String(light) + " –ª–∫";
    bot.sendMessage(chat_id, message, "");
  }
  else if (text == "–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å") {
    int water = getWaterLevel();
    String message = "üí° –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: " + String(water) + " %";
    bot.sendMessage(chat_id, message, "");
  }
  else if (text == "üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ") {
    String allData = "üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤:\n\n";
    allData += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(getTemperature()) + "¬∞C\n";
    allData += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(getHumidity()) + "%\n";
    allData += "üí° –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: " + String(getLightLevel()) + " –ª–º\n";
    allData += "–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å: " + String(getWaterLevel()) + "%";
    bot.sendMessage(chat_id, allData, "");
  }
  else {
    String reply = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n\n";
    reply += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã";
    bot.sendMessage(chat_id, reply, "");
  }
}

void startWiFi() {
  // // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Wi-Fi
  Serial.print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WiFi: ");
  Serial.println(ssid);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi –ø–æ–¥–∫–ª—é—á–µ–Ω!");
  Serial.print("IP –∞–¥—Ä–µ—Å: ");
  Serial.println(WiFi.localIP());
  
  client.setCACert(TELEGRAM_CERTIFICATE_ROOT);
  Serial.println("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ Telegram");
}

void stopWiFi() {
  WiFi.disconnect(true);  // –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ç–∏
  WiFi.mode(WIFI_OFF);    // –í—ã–∫–ª—é—á–∏—Ç—å WiFi –ø–æ–ª–Ω–æ—Å—Ç—å—é
  Serial.println("WiFi –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
}
